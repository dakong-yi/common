syntax = "proto3";

package friend;

option go_package = "github.com/dakong-yi/common/pkg/pb/friend";

import "google/api/annotations.proto";
import "pkg/proto/error/error.proto";

// 定义错误码枚举类型
enum FriendError {
  FRIEND_NOT_FOUND = 0;
  FRIEND_ALREADY_EXISTS = 1;
  FRIEND_BLOCKED = 2;
  FRIEND_INVALID_INPUT = 3;
}

message Friend {
  string id = 1;
  string name = 2;
  string email = 3;
}

message AddFriendRequest {
  int32 user_id = 1;
  int32 friend_id = 2;
}

message AddFriendResponse {
    oneof response {
        bool success = 1;
        error.Error error = 2;
    }
}
// Request message for accepting friend request
message AcceptFriendRequestRequest {
  string request_id = 1;
}

// Response message for accepting friend request
message AcceptFriendRequestResponse {
    oneof response {
        bool success = 1;
        error.Error error = 2;
    }
}

// Request message for blacklisting a friend
message BlockFriendRequest {
    string user_id = 1;
}
  
// Response message for blacklisting a friend
message BlockFriendResponse {
    oneof response {
        bool success = 1;
        error.Error error = 2;
    }
}
message GetFriendRequest {
    string id = 1;
}
  
message GetFriendResponse {
    oneof response {
        Friend friend = 1;
        error.Error error = 2;
    }
}
  
message DeleteFriendRequest {
    string id = 1;
}
  
message DeleteFriendResponse {
    oneof response {
        bool success = 1;
        error.Error error = 2;
    }
}

service FriendService {
  rpc AddFriend(AddFriendRequest) returns (AddFriendResponse){
    option (google.api.http) = {
        post: "/v1/friends"
        body: "*"
    };
  }

  // Accept friend request
  rpc AcceptFriendRequest(AcceptFriendRequestRequest) returns (AcceptFriendRequestResponse) {
    option (google.api.http) = {
        post: "/v1/friends/{request_id}/accept"
        body: "*"
    };
  }

  rpc BlockFriend(BlockFriendRequest) returns (BlockFriendResponse){
    option (google.api.http) = {
        post: "/v1/friends/{user_id}/block"
        body: "*"
    };
  };
  // 添加获取好友信息的方法
  rpc GetFriend(GetFriendRequest) returns (GetFriendResponse) {
    option (google.api.http) = {
      get: "/v1/friends/{id}"
    };
  }

  // 添加删除好友的方法
  rpc DeleteFriend(DeleteFriendRequest) returns (DeleteFriendResponse) {
    option (google.api.http) = {
      delete: "/v1/friends/{id}"
    };
  }
}

